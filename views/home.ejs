<!DOCTYPE html>
<html lang="en">
  <head>
    <link rel="stylesheet" href="/styles.css">
  </head>
  <body style="padding: 0 50px">
    <h2>Fetch Events</h2>
    <div style="margin-bottom: 25px;">
      <label for="startDate">Start Date:</label>
      <input type="date" id="startDate">

      <label for="endDate">End Date:</label>
      <input type="date" id="endDate">

      <button style="margin-left: 15px;" id="fetchButton">Fetch Events</button>
    </div>
    <div class="search-filters">
      <label>
        SKU:
        <input type="text" id="skuFilter" placeholder="Filter by SKU">
      </label>
      <label>
        ID:
        <input type="text" id="idFilter" placeholder="Filter by ID">
      </label>
      <label>
        Model:
        <input type="text" id="modelFilter" placeholder="Filter by Model">
      </label>
    </div>
    <span id="loader" style="display:none; margin-bottom: 15px;"></span>
    <div id="eventsTable"></div>

    <script>
      document.getElementById('fetchButton').addEventListener('click', async function () {
        loader.style.display = 'block';

        // Get the selected dates
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;

        if (!startDate || !endDate) {
          alert('Please select both start and end dates.');
          return;
        }

        // Convert to the desired format: YYYYMMDDTHH
        const formattedStartDate = `${startDate}T00`.replace(/-/g, '');
        const formattedEndDate = `${endDate}T23`.replace(/-/g, '');

        // Generate a cache key based on the date range
        const cacheKey = `events_${formattedStartDate}_${formattedEndDate}`;

        // Check if the data is in cache
        const cachedData = localStorage.getItem(cacheKey);

        if (cachedData) {
          // If data is in cache, use it
          const container = document.getElementById('eventsTable');
          container.innerHTML = cachedData;
          loader.style.display = 'none'; // Hide loader
        } else {
          try {
            // If data isn't in cache, make the fetch request
            const response = await fetch(`/events?start=${formattedStartDate}&end=${formattedEndDate}`);
            const data = await response.text();

            // Cache the data
            localStorage.setItem(cacheKey, data);

            // Inject the returned HTML into a container in the home.ejs
            const container = document.getElementById('eventsTable');
            container.innerHTML = data;
            bindExportFunctionality();

          } catch (error) {
            console.error('Error fetching events:', error);
            alert('Error fetching events. Please try again later.');
          } finally {
            // Hide the loader
            loader.style.display = 'none';
          }
        }
      });

      function filterTable() {
        const skuValue = document.getElementById('skuFilter').value.toLowerCase();
        const idValue = document.getElementById('idFilter').value.toLowerCase();
        const modelValue = document.getElementById('modelFilter').value.toLowerCase();

        const rows = document.querySelectorAll('#eventsTable tbody tr');

        for (let row of rows) {
          const skuCell = row.querySelector('.sku-cell').textContent.toLowerCase();
          const idCell = row.querySelector('.id-cell').textContent.toLowerCase();
          const modelCell = row.querySelector('.model-cell').textContent.toLowerCase();

          if (skuCell.includes(skuValue) && idCell.includes(idValue) && modelCell.includes(modelValue)) {
            row.style.display = "";
          } else {
            row.style.display = "none";
          }
        }
      }

      document.getElementById('skuFilter').addEventListener('input', filterTable);
      document.getElementById('idFilter').addEventListener('input', filterTable);
      document.getElementById('modelFilter').addEventListener('input', filterTable);
    </script>
    <script src="/js/exportCSV.js"></script>
  </body>
</html>